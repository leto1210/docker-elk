version: '3'

services:
  odfe-node1:
    restart: always
    container_name: odfe-node1
    hostname: odfe-node1
    user: "1000:1000"
    deploy:
      resources:
          limits:
            cpus: "4"
            memory: "4G"
    build:
      context: elasticsearch/
      args:
        DISTRO_VERSION: $DISTRO_VERSION
    volumes:
      - odfe-data1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9600:9600" # required for Performance Analyzer
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - cluster.name=odfe-cluster
      - node.name=odfe-node1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS: -Xmx2000m -Xms2000m"
    networks:
      - odfe-net
    healthcheck:
      test: ["CMD-SHELL", "docker-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 6

  odfe-node2:
    restart: always
    container_name: odfe-node2
    hostname: odfe-node2
    user: "1000:1000"
    deploy:
      resources:
          limits:
            cpus: "4"
            memory: "4G"
    build:
      context: elasticsearch/
      args:
        DISTRO_VERSION: $DISTRO_VERSION
    volumes:
      - odfe-data2:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - cluster.name=odfe-cluster
      - node.name=odfe-node2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS: -Xmx2000m -Xms2000m"
      - discovery.zen.ping.unicast.hosts=odfe-node1
    networks:
      - odfe-net
    healthcheck:
      test: ["CMD-SHELL", "docker-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 6

  odfe-kibana:
    restart: always
    container_name: odfe-kibana
    hostname: odfe-kibana
    build:
      context: kibana/
      args:
        DISTRO_VERSION: $DISTRO_VERSION
    # volumes:
      #- ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      ELASTICSEARCH_URL: https://odfe-node1:9200
    ports:
      - "5601:5601"
    expose:
      - "5601"
    networks:
      - odfe-net
    depends_on:
      - odfe-node1

  metricbeat:
    restart: always
    container_name: odfe-metricbeat
    hostname: odfe-metricbeat
    user: root
    deploy:
      resources:
          limits:
            cpus: "2"
            memory: "1G"
      restart_policy:
        condition: on-failure
    security_opt:  ['apparmor:unconfined', 'seccomp:unconfined']
    build:
      context: metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    networks:
      - odfe-net
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/metricbeat/data:/usr/share/metricbeat/data
      #- ./metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    depends_on:
      - odfe-kibana

  filebeat:
    restart: always
    container_name: odfe-filebeat
    hostname: odfe-filebeat
    user: root
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      #- ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # This is needed for filebeat to load container log path as specified in filebeat.yml
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      # This is needed for filebeat to load logs for system and auth modules
      - /var/log/:/var/log/:ro
      # This is needed for filebeat to load logs for auditd module
      # - /var/log/audit/:/var/log/audit/:ro
    networks:
      - odfe-net
    environment:
      - KIBANA_HOST="odfe-kibana"
    command: ["--strict.perms=false"]
    depends_on:
      - odfe-kibana

  curator:
    restart: always
    container_name: odfe-curator
    hostname: odfe-curator
    deploy:
      resources:
          limits:
            cpus: "0.5"
            memory: "1G"
    build:
      context: curator/
    environment:
      - ES_HOST=odfe-node1
      - DRYRUN=FALSE
      - INTERVAL_IN_HOURS=24
    volumes:
      - ./curator/config:/app/conf/:ro
      - ./curator/actions:/app/actions/:ro
    networks:
      - odfe-net
    depends_on:
      - odfe-node1

networks:
  odfe-net:
    driver: bridge
volumes:
  logstashdata:
    driver: local
  odfe-data1:
  odfe-data2:
